# Generated by Django 4.0.3 on 2022-04-05 14:56

import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.contrib.gis.geos.polygon
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ("calculations", "0001_initial"),
        ("calculations", "0002_noaaforecast_relative_humidity"),
        ("calculations", "0003_noaaforecast_location"),
        ("calculations", "0004_initialcondition"),
        ("calculations", "0005_riverflowcalculationoutput_riverflowprediction"),
        ("calculations", "0006_alter_noaaforecast_relative_humidity_and_more"),
        ("calculations", "0007_aggregatedzentrareading_and_more"),
        ("calculations", "0008_aggregateddepthprediction"),
        (
            "calculations",
            "0009_rename_centile_25_aggregateddepthprediction_lower_centile_and_more",
        ),
        ("calculations", "0010_percentagefloodrisk_and_more"),
        ("calculations", "0011_rename_percentage_risk_percentagefloodrisk_risk"),
        (
            "calculations",
            "0012_rename_prediction_date_aggregateddepthprediction_date_and_more",
        ),
        ("calculations", "0013_modelversion_floodmodelparameters"),
        ("calculations", "0014_aggregateddepthprediction_model_version"),
        ("calculations", "0015_rename_aggregateddepthprediction_depthprediction"),
        ("calculations", "0016_aggregateddepthprediction"),
        ("calculations", "0017_remove_aggregateddepthprediction_tile_size_and_more"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ZentraDevice",
            fields=[
                (
                    "device_sn",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                (
                    "device_name",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("height", models.FloatField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name="InitialCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        default=django.contrib.gis.geos.point.Point(0, 0), srid=4326
                    ),
                ),
                ("storage_level", models.FloatField()),
                ("slow_flow_rate", models.FloatField()),
                ("fast_flow_rate", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="RiverFlowCalculationOutput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prediction_date", models.DateTimeField()),
                ("forecast_time", models.DateTimeField()),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        default=django.contrib.gis.geos.point.Point(0, 0), srid=4326
                    ),
                ),
                ("rain_fall", models.FloatField()),
                ("potential_evapotranspiration", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="RiverFlowPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prediction_index", models.IntegerField(default=0)),
                ("river_flow", models.FloatField()),
                (
                    "calculation_output",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calculations.riverflowcalculationoutput",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZentraReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("precipitation", models.FloatField(null=True)),
                ("air_temperature", models.FloatField(null=True)),
                ("wind_speed", models.FloatField(null=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calculations.zentradevice",
                    ),
                ),
                ("relative_humidity", models.FloatField(null=True)),
                ("wind_direction", models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AggregatedZentraReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        default=django.contrib.gis.geos.point.Point(0, 0), srid=4326
                    ),
                ),
                ("precipitation", models.FloatField()),
                ("min_temperature", models.FloatField()),
                ("max_temperature", models.FloatField()),
                ("wind_u", models.FloatField()),
                ("wind_v", models.FloatField()),
                ("relative_humidity", models.FloatField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NoaaForecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("precipitation", models.FloatField()),
                ("min_temperature", models.FloatField()),
                ("max_temperature", models.FloatField()),
                ("wind_u", models.FloatField()),
                ("wind_v", models.FloatField()),
                ("relative_humidity", models.FloatField(default=0)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        default=django.contrib.gis.geos.point.Point(0, 0), srid=4326
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PercentageFloodRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("risk", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="ModelVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version_name", models.CharField(max_length=50)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("is_current", models.BooleanField()),
                ("param_file", models.FileField(upload_to="params/")),
            ],
        ),
        migrations.CreateModel(
            name="FloodModelParameters",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bounding_box",
                    django.contrib.gis.db.models.fields.PolygonField(
                        default=django.contrib.gis.geos.polygon.Polygon(
                            ((0, 0), (0, 1), (1, 1), (1, 0), (0, 0))
                        ),
                        srid=4326,
                    ),
                ),
                ("beta0", models.FloatField()),
                ("beta1", models.FloatField(null=True)),
                ("beta2", models.FloatField(null=True)),
                ("beta3", models.FloatField(null=True)),
                ("beta4", models.FloatField(null=True)),
                ("beta5", models.FloatField(null=True)),
                ("beta6", models.FloatField(null=True)),
                ("beta7", models.FloatField(null=True)),
                ("beta8", models.FloatField(null=True)),
                ("beta9", models.FloatField(null=True)),
                ("beta10", models.FloatField(null=True)),
                ("beta11", models.FloatField(null=True)),
                ("beta12", models.FloatField(null=True)),
                (
                    "model_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calculations.modelversion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DepthPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                (
                    "bounding_box",
                    django.contrib.gis.db.models.fields.PolygonField(
                        default=django.contrib.gis.geos.polygon.Polygon(
                            ((0, 0), (0, 1), (1, 1), (1, 0), (0, 0))
                        ),
                        srid=4326,
                    ),
                ),
                ("median_depth", models.FloatField()),
                ("lower_centile", models.FloatField()),
                ("upper_centile", models.FloatField()),
                ("mid_lower_centile", models.FloatField(default=0)),
                (
                    "model_version",
                    models.ForeignKey(
                        default=36,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calculations.modelversion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AggregatedDepthPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                (
                    "bounding_box",
                    django.contrib.gis.db.models.fields.PolygonField(
                        default=django.contrib.gis.geos.polygon.Polygon(
                            ((0, 0), (0, 1), (1, 1), (1, 0), (0, 0))
                        ),
                        srid=4326,
                    ),
                ),
                ("median_depth", models.FloatField()),
                ("lower_centile", models.FloatField()),
                ("mid_lower_centile", models.FloatField()),
                ("upper_centile", models.FloatField()),
                (
                    "model_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calculations.modelversion",
                    ),
                ),
                ("aggregation_level", models.IntegerField(default=2)),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
