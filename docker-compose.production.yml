version: '3.6'
# PRODUCTION OVERRIDE FILE
# Move this file to docker-compose.override.yml in production!

services:
# Reverse proxy top-level container
#
  gunicorn:
    # "image" here overrides build: in docker-compose.yml, unless --build is passed :)
    image: durhamarc/manyfews-gunicorn:latest
    restart: unless-stopped
    volumes:
      - app:/app/

  celery:
    image: durhamarc/manyfews-celery:latest
    restart: unless-stopped
    volumes:
      - app:/app/
    command:
      - "celery -A manyfews worker -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler -E"

  celery_beat:
    image: durhamarc/manyfews-celery:latest
    restart: unless-stopped
    volumes:
      - app:/app/

  web:
    image: durhamarc/manyfews-web:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_traefik"
      - "traefik.http.routers.web-http.entrypoints=http"
      - "traefik.http.routers.web-http.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web-http.middlewares=httpsRedirect@file"
      - "traefik.http.routers.web.entrypoints=https"
      - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
      - "traefik.http.routers.web.middlewares=secured@file"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "com.centurylink.watchtower.enable=true"
    networks:
      - backend
      - traefik


networks:
  traefik:
    name: traefik_traefik
    external: true

volumes:
  app:
    driver_opts:
      type: none
      device: ${PWD}/manyfews/
      o: bind

